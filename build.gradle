plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'com.github.johnrengelman.shadow' version '6.1.0'

   // id 'edu.sc.seis.launch4j' version '3.0.3' // Plugin pour Launch4j
    id 'edu.sc.seis.launch4j' version '2.4.7'
    id 'org.beryx.jlink' version '2.24.1'

}

group 'com.rafaros'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.2'
}

sourceCompatibility = '11'
targetCompatibility = '11'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

javafx {
    version = '11.0.2'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.media']
}

dependencies {
    implementation 'org.controlsfx:controlsfx:11.1.1'
    implementation 'com.dlsc.formsfx:formsfx-core:11.3.2'
    implementation 'net.synedra:validatorfx:0.3.1'
    implementation 'org.kordamp.ikonli:ikonli-javafx:12.3.0'
    implementation 'org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0'
    implementation 'eu.hansolo:tilesfx:11.48'
    implementation 'com.github.almasb:fxgl:11.17'
    implementation 'org.apache.commons:commons-imaging:1.0-alpha2'

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

application {
    mainClass = 'com.rafaros.filemanagerutils.FileManagerUtils'
    // Ajout explicite pour compatibilité
    mainClassName = 'com.rafaros.filemanagerutils.FileManagerUtils'
}

tasks.withType(Test) {
    useJUnitPlatform()
}

shadowJar {
    archiveBaseName.set('FileManagerUtils')
    archiveClassifier.set('')
    archiveVersion.set('')
    manifest {
        attributes(
                'Main-Class': application.mainClass
        )
    }
    mergeServiceFiles()
    dependencies {
        include(dependency('org.apache.commons:commons-imaging'))
        include(dependency('org.openjfx:javafx.*'))
    }
}


/*jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'FileManagerUtils'
    }
}*/


launch4j {
    mainClassName = 'com.rafaros.filemanagerutils.FileManagerUtils'
    //jar = "${shadowJar.archiveFile.get().asFile.path}" // Chemin dynamique vers le JAR généré
    jar = "${buildDir}/libs/FileManagerUtils.jar"
    outfile = "FileManagerUtils.exe"

    icon = file('src/main/resources/logo/File-Manager.ico')
    jreMinVersion = '11'
    jvmOptions = ['-Xms64m', '-Xmx128m']







    // Le chemin du JDK qui inclut le JRE
    // Ajoute automatiquement les fichiers JavaFX dans le dossier lib
    bundledJrePath = 'C:/Users/DESKTOP-LSFP9J9/.sdkman/candidates/java/11.0.20-zulu'
   // copyLibraries = true // Important pour inclure les dépendances dans le dossier lib

    //version = '1.0.0'
    companyName = 'Rafaros'
    fileDescription = 'File Manager Utils Application'
}

// Ajoute une tâche pour copier JavaFX dans le dossier lib
tasks.register("copyJavaFxLibs", Copy) {
    from fileTree(dir: "C:/Users/DESKTOP-LSFP9J9/.sdkman/candidates/openjfx-11.0.2_windows-x64_bin-sdk/javafx-sdk-11.0.2/lib", include: "*.jar")
    into "${buildDir}/libs/lib"
}
tasks.register('copyDependencies', Copy) {
    from configurations.runtimeClasspath
    into "${buildDir}/libs"
}


tasks.createExe {
    dependsOn "copyJavaFxLibs"
}

tasks.build {
    dependsOn shadowJar
}